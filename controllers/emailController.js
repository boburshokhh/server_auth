import crypto from "crypto";
import { User } from "../models/index.js";
import { sendEmail } from "../utils/emailService.js";

// üîπ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ (6 —Ü–∏—Ñ—Ä) –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
export const sendEmailVerification = async (req, res) => {
  try {
    const { email } = req.body;
    const user = await User.findOne({ where: { email } });

    if (!user) return res.status(404).json({ error: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });

    const code = crypto.randomInt(100000, 999999).toString();
    const expiresAt = new Date(Date.now() + 10 * 60 * 1000); // –ö–æ–¥ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç

    user.verificationCode = code;
    user.verificationCodeExpires = expiresAt;
    await user.save();

    await sendEmail(email, "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email", `<p>–í–∞—à –∫–æ–¥: <strong>${code}</strong></p>`);

    res.json({ message: "–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ email" });
  } catch (error) {
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email" });
  }
};

// üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
export const verifyEmail = async (req, res) => {
  try {
    const { email, code } = req.body;
    const user = await User.findOne({ where: { email } });

    if (!user || !user.verificationCode || user.verificationCodeExpires < new Date()) {
      return res.status(400).json({ error: "–ö–æ–¥ –∏—Å—Ç–µ–∫ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    if (user.verificationCode !== code) {
      return res.status(400).json({ error: "–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥" });
    }

    user.isVerified = true;
    user.verificationCode = null;
    user.verificationCodeExpires = null;
    await user.save();

    res.json({ message: "Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω" });
  } catch (error) {
    res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email" });
  }
};
